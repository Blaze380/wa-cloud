{
  "compilerOptions": {
    "removeComments": true,
    "target": "ES2022", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "moduleDetection": "force", /* Control what method is used to detect module-format JS files. */
    /* Modules */
    "module": "commonjs", /* Specify what module code is generated. */
    "rootDir": "./src", /* Specify the root folder within your source files. */
    "baseUrl": ".", /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@/*": [
        "./src/lib/*",
        "./src/lib",
      ]
    }, /* Specify a set of entries that re-map imports to additional lookup locations. */
    /* JavaScript Support */
    /* Emit */
    "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "outDir": "./dist", /* Specify an output folder for all emitted files. */
    /* Interop Constraints */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false, /* When type checking, take into account 'null' and 'undefined'. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "exclude": [
    "node_modules",
    "src/__tests__"
  ],
}